var searchIndex = new Map(JSON.parse('[\
["complex",{"doc":"","t":"FNNNNNNNNONNNONNNNNNN","n":["Complex","add","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","im","into","mul","new","re","serialize","sin","sqrt_mag","to_owned","try_from","try_into","type_id"],"q":[[0,"complex"],[21,"core::result"],[22,"serde::de"],[23,"core::fmt"],[24,"core::fmt"],[25,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[[1,1],1],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[-1,[[3,[1]]],4],[[1,5],6],[-1,-1,[]],0,[-1,-2,[],[]],[[1,1],1],[[7,7],1],0,[[1,-1],3,8],[1,1],[1,7],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]]],"c":[],"p":[[5,"Complex",0],[1,"tuple"],[6,"Result",21],[10,"Deserializer",22],[5,"Formatter",23],[8,"Result",23],[1,"f64"],[10,"Serializer",24],[5,"TypeId",25]],"b":[]}],\
["server",{"doc":"","t":"CCCCHHFFFFNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOFFNNNNNNHONNNNNNOONNONNNNOONNNNNNNNN","n":["listener","local_env","pool","tasks","handle_message","start_server","HOST","LOOP_SLEEP_DURATION","PORT","RUST_ENV","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_vars","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Pool","Worker","add_worker","borrow","borrow","borrow_mut","borrow_mut","close_stream","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_fragment_request","get_maximal_work_load","get_random_worker","get_stream","get_worker","get_worker_name","get_worker_with_task","init","init","into","into","new","new","remove_worker","set_stream","set_task","task","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","workers","FractalParams","Task","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_fractal_tasks","data","deref","deref","deref_mut","deref_mut","drop","drop","fractal_type","fragment","from","from","id","init","init","into","into","max_iteration","resolution","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"server"],[4,"server::listener"],[6,"server::local_env"],[63,"server::pool"],[108,"server::tasks"],[144,"std::net::tcp"],[145,"alloc::string"],[146,"alloc::vec"],[147,"std::sync::mutex"],[148,"alloc::sync"],[149,"core::result"],[150,"core::any"],[151,"core::fmt"],[152,"core::fmt"],[153,"core::option"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,12,13,14,15,12,13,14,15,0,12,12,13,13,14,14,15,15,12,13,14,15,12,13,14,15,12,13,14,15,12,13,14,15,12,13,14,15,12,13,14,15,12,13,14,15,12,13,14,15,12,13,14,15,0,0,5,5,19,5,19,19,5,5,19,5,19,5,19,5,19,5,19,19,19,5,19,5,19,5,5,19,5,19,5,19,5,19,19,19,5,19,5,19,5,19,5,19,5,0,0,26,25,26,25,25,25,0,25,26,25,26,25,26,25,26,25,26,25,25,26,25,26,25,26,26,25,26,25,26,25,26,25,26,25],"f":[0,0,0,0,[[1,2,[4,[3]],[7,[[6,[5]]]]],8],[[9,10],8],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],8],[11,-1,[]],[12,2],[11,-1,[]],[13,10],[14,2],[11,-1,[]],[11,-1,[]],[15,16],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,8],[11,8],[11,8],[11,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[5,19],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,8],[[],5],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,8],[11,8],[[5,20],21],[[19,20],21],[-1,-1,[]],[-1,-1,[]],[[22,1],19],[19,23],[5,[[24,[19]]]],[19,1],[[5,9],[[24,[19]]]],[19,9],[[5,9],[[24,[19]]]],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[[9,23,1],19],[[5,9],8],[[19,1],8],[[19,[24,[9]]],8],0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[[-1,-2],8,[],[]],[[26,10],[[17,[[4,[25]],2]]]],0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,8],[11,8],0,0,[-1,-1,[]],[-1,-1,[]],0,[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"TcpStream",144],[5,"String",145],[1,"u8"],[5,"Vec",146],[5,"Pool",63],[5,"Mutex",147],[5,"Arc",148],[1,"tuple"],[1,"str"],[1,"u16"],[1,"usize"],[5,"RUST_ENV",6],[5,"PORT",6],[5,"HOST",6],[5,"LOOP_SLEEP_DURATION",6],[1,"u64"],[6,"Result",149],[5,"TypeId",150],[5,"Worker",63],[5,"Formatter",151],[8,"Result",151],[5,"FragmentRequest",152],[1,"u32"],[6,"Option",153],[5,"Task",108],[5,"FractalParams",108]],"b":[]}],\
["shared",{"doc":"","t":"HCQCQCCCCSSSSSSSHHHHHHCCCCCCCCCCCCCGPPPPPNNNNNNNNNNNNNNNNNNNCCCCCFNNONNNNNNNNNNNNNNNNNFNNONNNNNONNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNONNNNNNNNNNNNNNNNFNNONNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNFNNNNNNNNNNONNNNNNOFNNNNNNNNNONNNOOONNNNNFNNNNNNNNNNONONNONOONNNNNNNFNNNNONNNNNNNNNNONNNNNNFNNNNONNNNNNNNNNNNNNNOFNNNNNNNNNNNNNNNNNNNNOOFKYEEEEEEEEEEEEEEKYENNNNNNNMNNNNONNNNOMNNNNNNNNFNNNNNNNNNNNNNOONNNNNNNFNNNNNNNNNNNNNNOONNNNNNFNNNNONNNNNNNNNNONNNNNNH","n":["add","colors","fragment_from_json_value","logger","loop_sleep","network","structs","toml_reader","utils","BLUE","CYAN","GREEN","RED","RESET","WHITE","YELLOW","setup_logger","close_stream","extract_message","get_socket_addr","receive_message","send_message","fractal_descriptor","fractals","fragment","fragment_request","fragment_result","fragment_task","pixel_data","pixel_intensity","point","prelude","range","resolution","u8data","FractalDescriptor","IteratedSinZ","Julia","Mandelbrot","NewtonRaphsonZ3","NewtonRaphsonZ4","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","iterated_sin_z","julia","mandelbrot","newton_raphson_z3","newton_raphson_z4","IteratedSinZ","borrow","borrow_mut","c","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","generate","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","Julia","borrow","borrow_mut","c","clone","clone_into","deref","deref_mut","deserialize","divergence_threshold_square","drop","fmt","from","generate","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","Mandelbrot","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","generate","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","NewtonRaphsonZ3","borrow","borrow_mut","c","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","NewtonRaphsonZ4","borrow","borrow_mut","c","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","Fragment","Request","Result","Task","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","init","into","serialize","serialize","try_from","try_into","type_id","vzip","FragmentRequest","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","init","into","maximal_work_load","new","serialize","try_from","try_into","type_id","vzip","worker_name","FragmentResult","borrow","borrow_mut","default","deref","deref_mut","deserialize","drop","fmt","from","id","init","into","new","pixels","range","resolution","serialize","try_from","try_into","type_id","vzip","FragmentTask","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","fractal","from","id","init","into","max_iteration","new","range","resolution","run","serialize","to_owned","try_from","try_into","type_id","vzip","PixelData","borrow","borrow_mut","clone","clone_into","count","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","new","offset","serialize","to_owned","try_from","try_into","type_id","vzip","PixelIntensity","borrow","borrow_mut","clone","clone_into","count","deref","deref_mut","deserialize","drop","fmt","from","init","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","zn","Point","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","x","y","Complex","Deserialize","Deserialize","Fragment","FragmentRequest","FragmentResult","FragmentTask","IteratedSinZ","Julia","Mandelbrot","NewtonRaphsonZ3","NewtonRaphsonZ4","PixelData","PixelIntensity","Point","Range","Resolution","Serialize","Serialize","U8Data","add","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","deserialize","drop","fmt","from","im","init","into","mul","new","re","serialize","serialize","sin","sqrt_mag","to_owned","try_from","try_into","type_id","vzip","Range","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","max","min","new","serialize","to_owned","try_from","try_into","type_id","vzip","Resolution","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","new","nx","ny","serialize","to_owned","try_from","try_into","type_id","vzip","U8Data","borrow","borrow_mut","clone","clone_into","count","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","new","offset","serialize","to_owned","try_from","try_into","type_id","vzip","random_string"],"q":[[0,"shared"],[9,"shared::colors"],[16,"shared::logger"],[17,"shared::network"],[22,"shared::structs"],[35,"shared::structs::fractal_descriptor"],[60,"shared::structs::fractals"],[65,"shared::structs::fractals::iterated_sin_z"],[86,"shared::structs::fractals::julia"],[108,"shared::structs::fractals::mandelbrot"],[129,"shared::structs::fractals::newton_raphson_z3"],[149,"shared::structs::fractals::newton_raphson_z4"],[169,"shared::structs::fragment"],[189,"shared::structs::fragment_request"],[208,"shared::structs::fragment_result"],[230,"shared::structs::fragment_task"],[257,"shared::structs::pixel_data"],[280,"shared::structs::pixel_intensity"],[302,"shared::structs::point"],[325,"shared::structs::prelude"],[372,"shared::structs::range"],[395,"shared::structs::resolution"],[418,"shared::structs::u8data"],[441,"shared::utils"],[442,"std::net::tcp"],[443,"core::option"],[444,"core::net::socket_addr"],[445,"std::io::error"],[446,"core::result"],[447,"alloc::string"],[448,"alloc::vec"],[449,"serde::de"],[450,"core::fmt"],[451,"core::fmt"],[452,"core::any"],[453,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","A <strong>data structure</strong> that can be deserialized from any data …","","","","","","","","","","","","","","","","A <strong>data structure</strong> that can be serialized into any data …","","","","","","","","","","Deserialize this value from the given Serde deserializer.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Serialize this value into the given Serde serializer.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,37,37,37,37,37,37,38,37,37,37,37,37,37,37,37,37,37,40,37,37,37,37,37,37,37,37,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0],"f":[[[1,1],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,3],[4,3],[2,[[6,[5]]]],[[2,7],[[10,[8,9]]]],[4,[[10,[[3,[11,[13,[12]]]],9]]]],[[4,5,[6,[[13,[12]]]],[6,[[13,[12]]]]],[[10,[3,9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[14,14],[[-1,-2],3,[],[]],[[],14],[1,-1,[]],[1,-1,[]],[-1,[[10,[14]]],15],[1,3],[[14,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[14,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[20,20],[[-1,-2],3,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[20]]],15],[1,3],[[20,16],17],[-1,-1,[]],[[20,7,21,21],[[3,[21,21]]]],[[],1],[-1,-2,[],[]],[[20,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[22,22],[[-1,-2],3,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[22]]],15],0,[1,3],[[22,16],17],[-1,-1,[]],[[22,7,21,21],[[3,[21,21]]]],[[],1],[-1,-2,[],[]],[[22,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[23,23],[[-1,-2],3,[],[]],[[],23],[1,-1,[]],[1,-1,[]],[-1,[[10,[23]]],15],[1,3],[[23,16],17],[-1,-1,[]],[[7,21,21],[[3,[21,21]]]],[[],1],[-1,-2,[],[]],[[23,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[24,24],[[-1,-2],3,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[24]]],15],[1,3],[[24,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[24,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[25,25],[[-1,-2],3,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[25]]],15],[1,3],[[25,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[25,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[5]]],15],[1,3],[[5,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[5,11],[[5,-1],10,18],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[26]]],15],[1,3],[[26,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],0,[[2,27],26],[[26,-1],10,18],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],28],[1,-1,[]],[1,-1,[]],[-1,[[10,[28]]],15],[1,3],[[28,16],17],[-1,-1,[]],0,[[],1],[-1,-2,[],[]],[[29,30,31,32],28],0,0,0,[[28,-1],10,18],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[[-1,-2],3,[],[]],[[],33],[1,-1,[]],[1,-1,[]],[-1,[[10,[33]]],15],[1,3],[[33,16],17],0,[-1,-1,[]],0,[[],1],[-1,-2,[],[]],0,[[29,14,7,30,31],33],0,0,[33,[[3,[28,[13,[12]]]]]],[[33,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[[-1,-2],3,[],[]],0,[[],32],[1,-1,[]],[1,-1,[]],[-1,[[10,[32]]],15],[1,3],[[32,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[27,27],32],0,[[32,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[-1,-2],3,[],[]],0,[1,-1,[]],[1,-1,[]],[-1,[[10,[34]]],15],[1,3],[[34,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[35,35],34],[[34,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[[-1,-2],3,[],[]],[[],36],[1,-1,[]],[1,-1,[]],[-1,[[10,[36]]],15],[1,3],[[36,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[21,21],36],[[36,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,37],37],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[[-1,-2],3,[],[]],[1,-1,[]],[1,-1,[]],[-1,[[10,[38]]],15],[-1,[[10,[37]]],15],[1,3],[[37,16],[[10,[3,39]]]],[-1,-1,[]],0,[[],1],[-1,-2,[],[]],[[37,37],37],[[21,21],37],0,[[40,-1],10,18],[[37,-1],10,18],[37,37],[37,21],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[31,31],[[-1,-2],3,[],[]],[[],31],[1,-1,[]],[1,-1,[]],[-1,[[10,[31]]],15],[1,3],[[31,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],0,0,[[36,36],31],[[31,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[30,30],[[-1,-2],3,[],[]],[[],30],[1,-1,[]],[1,-1,[]],[-1,[[10,[30]]],15],[1,3],[[30,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[7,7],30],0,0,[[30,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[29,29],[[-1,-2],3,[],[]],0,[[],29],[1,-1,[]],[1,-1,[]],[-1,[[10,[29]]],15],[1,3],[[29,16],17],[-1,-1,[]],[[],1],[-1,-2,[],[]],[[27,27],29],0,[[29,-1],10,18],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,19,[]],[-1,-2,[],[]],[7,11]],"c":[],"p":[[1,"usize"],[1,"str"],[1,"tuple"],[5,"TcpStream",442],[6,"Fragment",169],[6,"Option",443],[1,"u16"],[6,"SocketAddr",444],[5,"Error",445],[6,"Result",446],[5,"String",447],[1,"u8"],[5,"Vec",448],[6,"FractalDescriptor",35],[10,"Deserializer",449],[5,"Formatter",450],[8,"Result",450],[10,"Serializer",451],[5,"TypeId",452],[5,"IteratedSinZ",65],[1,"f64"],[5,"Julia",86],[5,"Mandelbrot",108],[5,"NewtonRaphsonZ3",129],[5,"NewtonRaphsonZ4",149],[5,"FragmentRequest",189],[1,"u32"],[5,"FragmentResult",208],[5,"U8Data",418],[5,"Resolution",395],[5,"Range",372],[5,"PixelData",257],[5,"FragmentTask",230],[5,"PixelIntensity",280],[1,"f32"],[5,"Point",302],[5,"Complex",325],[10,"Deserialize",325],[5,"Error",450],[10,"Serialize",325]],"b":[[183,"impl-Fragment"],[184,"impl-Serialize-for-Fragment"]]}],\
["worker",{"doc":"","t":"CCHFFFFNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNN","n":["connect","local_env","connect_to_server","HOST","LOOP_SLEEP_DURATION","PORT","RUST_ENV","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_vars","deref","deref","deref","deref","from","from","from","from","into","into","into","into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"worker"],[2,"worker::connect"],[3,"worker::local_env"],[40,"core::net::socket_addr"],[41,"std::net::tcp"],[42,"std::io::error"],[43,"core::result"],[44,"alloc::string"],[45,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,6,8,10,11,6,8,10,11,0,6,8,10,11,6,8,10,11,6,8,10,11,6,8,10,11,6,8,10,11,6,8,10,11],"f":[0,0,[1,[[4,[2,3]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],5],[6,7],[8,9],[10,7],[11,12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]]],"c":[],"p":[[6,"SocketAddr",40],[5,"TcpStream",41],[5,"Error",42],[6,"Result",43],[1,"tuple"],[5,"RUST_ENV",3],[5,"String",44],[5,"PORT",3],[1,"u16"],[5,"HOST",3],[5,"LOOP_SLEEP_DURATION",3],[1,"u64"],[5,"TypeId",45]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
