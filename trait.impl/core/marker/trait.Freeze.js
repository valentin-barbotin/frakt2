(function() {var implementors = {
"complex":[["impl Freeze for <a class=\"struct\" href=\"complex/struct.Complex.html\" title=\"struct complex::Complex\">Complex</a>",1,["complex::Complex"]]],
"server":[["impl Freeze for <a class=\"struct\" href=\"server/local_env/struct.RUST_ENV.html\" title=\"struct server::local_env::RUST_ENV\">RUST_ENV</a>",1,["server::local_env::RUST_ENV"]],["impl Freeze for <a class=\"struct\" href=\"server/local_env/struct.PORT.html\" title=\"struct server::local_env::PORT\">PORT</a>",1,["server::local_env::PORT"]],["impl Freeze for <a class=\"struct\" href=\"server/local_env/struct.HOST.html\" title=\"struct server::local_env::HOST\">HOST</a>",1,["server::local_env::HOST"]],["impl Freeze for <a class=\"struct\" href=\"server/local_env/struct.LOOP_SLEEP_DURATION.html\" title=\"struct server::local_env::LOOP_SLEEP_DURATION\">LOOP_SLEEP_DURATION</a>",1,["server::local_env::LOOP_SLEEP_DURATION"]],["impl Freeze for <a class=\"struct\" href=\"server/pool/struct.Pool.html\" title=\"struct server::pool::Pool\">Pool</a>",1,["server::pool::Pool"]],["impl Freeze for <a class=\"struct\" href=\"server/pool/struct.Worker.html\" title=\"struct server::pool::Worker\">Worker</a>",1,["server::pool::Worker"]],["impl Freeze for <a class=\"struct\" href=\"server/tasks/struct.FractalParams.html\" title=\"struct server::tasks::FractalParams\">FractalParams</a>",1,["server::tasks::FractalParams"]],["impl Freeze for <a class=\"struct\" href=\"server/tasks/struct.Task.html\" title=\"struct server::tasks::Task\">Task</a>",1,["server::tasks::Task"]]],
"shared":[["impl Freeze for <a class=\"enum\" href=\"shared/structs/fractal_descriptor/enum.FractalDescriptor.html\" title=\"enum shared::structs::fractal_descriptor::FractalDescriptor\">FractalDescriptor</a>",1,["shared::structs::fractal_descriptor::FractalDescriptor"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fractals/iterated_sin_z/struct.IteratedSinZ.html\" title=\"struct shared::structs::fractals::iterated_sin_z::IteratedSinZ\">IteratedSinZ</a>",1,["shared::structs::fractals::iterated_sin_z::IteratedSinZ"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fractals/julia/struct.Julia.html\" title=\"struct shared::structs::fractals::julia::Julia\">Julia</a>",1,["shared::structs::fractals::julia::Julia"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fractals/mandelbrot/struct.Mandelbrot.html\" title=\"struct shared::structs::fractals::mandelbrot::Mandelbrot\">Mandelbrot</a>",1,["shared::structs::fractals::mandelbrot::Mandelbrot"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fractals/newton_raphson_z3/struct.NewtonRaphsonZ3.html\" title=\"struct shared::structs::fractals::newton_raphson_z3::NewtonRaphsonZ3\">NewtonRaphsonZ3</a>",1,["shared::structs::fractals::newton_raphson_z3::NewtonRaphsonZ3"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fractals/newton_raphson_z4/struct.NewtonRaphsonZ4.html\" title=\"struct shared::structs::fractals::newton_raphson_z4::NewtonRaphsonZ4\">NewtonRaphsonZ4</a>",1,["shared::structs::fractals::newton_raphson_z4::NewtonRaphsonZ4"]],["impl Freeze for <a class=\"enum\" href=\"shared/structs/fragment/enum.Fragment.html\" title=\"enum shared::structs::fragment::Fragment\">Fragment</a>",1,["shared::structs::fragment::Fragment"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fragment_request/struct.FragmentRequest.html\" title=\"struct shared::structs::fragment_request::FragmentRequest\">FragmentRequest</a>",1,["shared::structs::fragment_request::FragmentRequest"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fragment_result/struct.FragmentResult.html\" title=\"struct shared::structs::fragment_result::FragmentResult\">FragmentResult</a>",1,["shared::structs::fragment_result::FragmentResult"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/fragment_task/struct.FragmentTask.html\" title=\"struct shared::structs::fragment_task::FragmentTask\">FragmentTask</a>",1,["shared::structs::fragment_task::FragmentTask"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/pixel_data/struct.PixelData.html\" title=\"struct shared::structs::pixel_data::PixelData\">PixelData</a>",1,["shared::structs::pixel_data::PixelData"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/pixel_intensity/struct.PixelIntensity.html\" title=\"struct shared::structs::pixel_intensity::PixelIntensity\">PixelIntensity</a>",1,["shared::structs::pixel_intensity::PixelIntensity"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/point/struct.Point.html\" title=\"struct shared::structs::point::Point\">Point</a>",1,["shared::structs::point::Point"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/range/struct.Range.html\" title=\"struct shared::structs::range::Range\">Range</a>",1,["shared::structs::range::Range"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/resolution/struct.Resolution.html\" title=\"struct shared::structs::resolution::Resolution\">Resolution</a>",1,["shared::structs::resolution::Resolution"]],["impl Freeze for <a class=\"struct\" href=\"shared/structs/u8data/struct.U8Data.html\" title=\"struct shared::structs::u8data::U8Data\">U8Data</a>",1,["shared::structs::u8data::U8Data"]]],
"worker":[["impl Freeze for <a class=\"struct\" href=\"worker/local_env/struct.RUST_ENV.html\" title=\"struct worker::local_env::RUST_ENV\">RUST_ENV</a>",1,["worker::local_env::RUST_ENV"]],["impl Freeze for <a class=\"struct\" href=\"worker/local_env/struct.PORT.html\" title=\"struct worker::local_env::PORT\">PORT</a>",1,["worker::local_env::PORT"]],["impl Freeze for <a class=\"struct\" href=\"worker/local_env/struct.HOST.html\" title=\"struct worker::local_env::HOST\">HOST</a>",1,["worker::local_env::HOST"]],["impl Freeze for <a class=\"struct\" href=\"worker/local_env/struct.LOOP_SLEEP_DURATION.html\" title=\"struct worker::local_env::LOOP_SLEEP_DURATION\">LOOP_SLEEP_DURATION</a>",1,["worker::local_env::LOOP_SLEEP_DURATION"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()